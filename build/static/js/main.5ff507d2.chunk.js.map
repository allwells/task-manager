{"version":3,"sources":["styles/theme.js","styles/notification.styled.js","components/Notification.js","styles/app.styled.js","styles/todo-form.styled.js","components/TodoForm.js","styles/todos.styled.js","icons/trash.svg","icons/edit-task.svg","components/Todos.js","services/server.js","App.js","index.js"],"names":["theme","text","black","text02","button","primary","textField","secondary","buttonHover","transparent","notification","success","border","background","error","StyledNotification","styled","div","Notification","messageType","message","className","StyledApp","StyledTodoForm","TodoForm","addTask","onChange","newTask","updateTask","onSubmit","type","placeholder","value","StyledTodos","Todos","todos","deleteTask","editTask","map","todo","task","onClick","id","src","trash","width","height","alt","URL","axios","get","then","response","data","NEW_TODO","post","ID","delete","App","React","useState","setTask","setNewTask","setMessage","setMessageType","useEffect","server","event","preventDefault","concat","setTimeout","target","tsk","status","filter","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ff507d2.chunk.js","sourcesContent":["const theme = {\n  text: \"#F5F5F5\",\n  black: \"#000000\",\n  text02: \"#303137\",\n  button: \"#B6296F\",\n  primary: \"#F0F0F0\",\n  textField: \"#1D222E\",\n  secondary: \"#292E39\",\n  buttonHover: \"#770E3F\",\n  transparent: \"transparent\",\n  notification: {\n    success: {\n      border: \"#080\",\n      background: \"#0806\",\n    },\n    error: {\n      border: \"#800\",\n      background: \"#8006\",\n    },\n  },\n};\n\nexport default theme;\n","import styled from \"styled-components\";\nimport theme from \"./theme\";\n\nconst StyledNotification = styled.div`\n  * {\n    font-family: inherit;\n  }\n\n  .error {\n    left: 40%;\n    right: 40%;\n    z-index: 1;\n    top: 1.5rem;\n    display: flex;\n    padding: 10px;\n    font-weight: 300;\n    font-size: 0.8rem;\n    position: absolute;\n    place-items: center;\n    border-radius: 0.2rem;\n    color: ${theme.text02};\n    justify-content: center;\n    background: ${theme.notification.error.background};\n    border: 2px solid ${theme.notification.error.border};\n  }\n\n  .success {\n    left: 40%;\n    right: 40%;\n    z-index: 1;\n    top: 1.5rem;\n    display: flex;\n    padding: 10px;\n    font-weight: 300;\n    font-size: 0.8rem;\n    position: absolute;\n    place-items: center;\n    border-radius: 0.2rem;\n    color: ${theme.text02};\n    justify-content: center;\n    background: ${theme.notification.success.background};\n    border: 2px solid ${theme.notification.success.border};\n  }\n`;\n\nexport default StyledNotification;\n","import React from \"react\";\nimport StyledNotification from \"../styles/notification.styled\";\n\nexport default function Notification({ messageType, message }) {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <StyledNotification>\n      <div className={messageType}>{message}</div>\n    </StyledNotification>\n  );\n}\n","import styled from \"styled-components\";\nimport theme from \"./theme\";\n\nconst StyledApp = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  place-items: center;\n  flex-direction: column;\n  justify-content: center;\n  background: ${theme.primary};\n\n  .taskManagerLayout {\n    width: 30%;\n    height: 70%;\n    align-self: center;\n    display: flex;\n    place-items: center;\n    flex-direction: column;\n    justify-content: center;\n    border-radius: 0.4rem;\n    background: ${theme.secondary};\n    box-shadow: 0 0.5rem 1rem ${theme.black + \"77\"};\n  }\n`;\n\nexport default StyledApp;\n","import styled from \"styled-components\";\nimport theme from \"./theme\";\n\nconst StyledTodoForm = styled.div`\n  width: 30%;\n  padding: 2% 0;\n  margin-top: 3rem;\n\n  * {\n    font-family: inherit;\n  }\n\n  h2 {\n    font-weight: 200;\n    font-size: 1.5rem;\n    text-align: center;\n    margin-bottom: 3rem;\n    color: ${theme.text02};\n  }\n\n  div {\n    width: 100%;\n    display: flex;\n    height: fit-content;\n    place-items: center;\n    justify-content: center;\n\n    input,\n    button {\n      border: none;\n      outline: none;\n      font-weight: 300;\n      font-size: 0.7rem;\n      border-radius: 3rem;\n      color: ${theme.text};\n      background: ${theme.button};\n    }\n  }\n\n  .inputField {\n    margin-bottom: 0.5rem;\n\n    input {\n      width: 100%;\n      height: 2rem;\n      padding: 0 1rem;\n      font-size: 0.8rem;\n      background: ${theme.textField};\n    }\n  }\n\n  .buttonSet {\n    display: flex;\n    place-items: center;\n    justify-content: space-evenly;\n\n    input,\n    button {\n      width: 5rem;\n      height: 1.6rem;\n      box-shadow: 0 0.3rem 0.3rem ${theme.secondary + \"88\"};\n\n      &:hover {\n        background: ${theme.buttonHover};\n      }\n\n      &:focus {\n        background: ${theme.buttonHover};\n        box-shadow: 0 0.1rem 0.2rem ${theme.secondary + \"88\"};\n      }\n    }\n  }\n`;\n\nexport default StyledTodoForm;\n","import StyledTodoForm from \"../styles/todo-form.styled\";\n\nexport default function TodoForm({ addTask, onChange, newTask, updateTask }) {\n  return (\n    <StyledTodoForm>\n      <h2>Task Manager</h2>\n      <form onSubmit={addTask}>\n        <div className=\"inputField\">\n          <input\n            type=\"text\"\n            onChange={onChange}\n            placeholder=\"Add Task...\"\n            value={newTask}\n          />\n        </div>\n        <div className=\"buttonSet\">\n          <input type=\"submit\" value=\"Add Task\" />\n          {/* <button onClick={updateTask}>Update</button> */}\n        </div>\n      </form>\n    </StyledTodoForm>\n  );\n}\n","import styled from \"styled-components\";\nimport theme from \"./theme\";\n\nconst StyledTodos = styled.div`\n  width: 30%;\n  height: auto;\n  margin-top: 0.5rem;\n\n  * {\n    font-family: inherit;\n  }\n\n  .todos {\n    width: 100%;\n    height: auto;\n    display: flex;\n    margin: 0.5rem 0;\n    padding: 0 0.5rem;\n    border-radius: 0.3rem;\n    justify-content: space-between;\n    background: ${theme.black + \"11\"};\n\n    &:hover {\n      background: ${theme.black + \"22\"};\n    }\n\n    p {\n      cursor: default;\n      font-weight: 200;\n      font-size: 0.8rem;\n      color: ${theme.text02};\n    }\n  }\n\n  .buttonSet {\n    height: auto;\n    display: flex;\n    width: fit-content;\n    place-items: center;\n    justify-content: center;\n\n    button {\n      border: none;\n      outline: none;\n      display: flex;\n      cursor: default;\n      padding: 0.5rem;\n      border-radius: 50%;\n      place-items: center;\n      flex-direction: column;\n      justify-content: center;\n      background: ${theme.transparent};\n\n      &:hover {\n        background: ${theme.black + \"11\"};\n      }\n    }\n  }\n`;\n\nexport default StyledTodos;\n","export default __webpack_public_path__ + \"static/media/trash.9c028c94.svg\";","export default __webpack_public_path__ + \"static/media/edit-task.6eeda710.svg\";","import React from \"react\";\nimport StyledTodos from \"../styles/todos.styled\";\nimport edit from \"../icons/edit-task.svg\";\nimport trash from \"../icons/trash.svg\";\n\nexport default function Todos({ todos, deleteTask, editTask }) {\n  const size = 16;\n\n  return (\n    <StyledTodos>\n      {todos.map((todo) => (\n        <div key={todo.id} className=\"todos\">\n          <p>{todo.task}</p>\n          <div className=\"buttonSet\">\n            {/* <button\n              className=\"editBtn\"\n              onClick={() => editTask(todo.id, todo.task)}\n            >\n              <img src={edit} width={size} height={size} alt=\"edit\" />\n            </button> */}\n            <button\n              className=\"deleteBtn\"\n              onClick={() => deleteTask(todo.id, todo.task)}\n            >\n              <img src={trash} width={size} height={size} alt=\"trash\" />\n            </button>\n          </div>\n        </div>\n      ))}\n    </StyledTodos>\n  );\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nconst URL = \"/api/tasks\";\n// const URL = \"http://localhost:3001/api/tasks\";\n\nconst get = () => {\n  const request = axios.get(URL);\n  return request.then((response) => response.data);\n};\n\nconst create = (NEW_TODO) => {\n  const request = axios.post(URL, NEW_TODO);\n  return request.then((response) => response.data);\n};\n\nconst update = (ID, NEW_TODO) => {\n  const request = axios.put(`${URL}/${ID}`, NEW_TODO);\n  return request.then((response) => response.data);\n};\n\nconst remove = (ID) => {\n  const request = axios.delete(`${URL}/${ID}`);\n  return request.then((response) => response);\n};\n\nexport default {\n  get,\n  create,\n  update,\n  remove,\n};\n","import Notification from \"./components/Notification\";\nimport React from \"react\";\nimport StyledApp from \"./styles/app.styled\";\nimport TodoForm from \"./components/TodoForm\";\nimport Todos from \"./components/Todos\";\nimport server from \"./services/server\";\n\nexport default function App() {\n  const [task, setTask] = React.useState([]);\n  const [newTask, setNewTask] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [messageType, setMessageType] = React.useState(\"\");\n\n  React.useEffect(() => {\n    server.get().then((response) => {\n      setTask(response);\n    });\n  }, []);\n\n  const onChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  const createTask = (event) => {\n    event.preventDefault();\n\n    const new_task = {\n      task: newTask,\n    };\n\n    server.create(new_task).then((response) => {\n      setTask(task.concat(response));\n      setNewTask(\"\");\n\n      setMessageType(\"success\");\n      setMessage(\"Task added!\");\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  };\n\n  const deleteTask = (id, tsk) => {\n    server\n      .remove(id)\n      .then((response) => {\n        if (response.status === 200) {\n          setTask(task.filter((tsk) => tsk.id !== id));\n          setMessageType(\"success\");\n          setMessage(`Task deleted: ${tsk}!`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }\n      })\n      .catch((error) => {\n        setMessageType(\"error\");\n        setMessage(\"Task already deleted!\");\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setTask(task.filter((tsk) => tsk.id !== id));\n      });\n  };\n\n  // const editTask = (id, tsk) => {\n  //   task.find((tsk) => tsk.id === id) ? setNewTask(tsk) : console.log();\n  //   console.log(task.find((tsk) => tsk.id === id));\n  // };\n\n  // const updateTask = () => {};\n\n  return (\n    <StyledApp>\n      <Notification messageType={messageType} message={message} />\n      <TodoForm addTask={createTask} onChange={onChange} newTask={newTask} />\n      <Todos todos={task} deleteTask={deleteTask} />\n    </StyledApp>\n  );\n}\n","import \"./styles/index.styled.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}